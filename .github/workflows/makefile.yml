name: Deployment

concurrency: production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: "Заполним переменных окружения"
    runs-on: ubuntu-latest
    environment: production  # использовать среду "production"

    steps:
      - name: "Инициализация репозитория"
        uses: actions/checkout@v3

      - name: "Заполнение переменных среды"
        run: |
          echo "WEBDAV_SERVER=${{ secrets.WEBDAV_SERVER }}" >> .env
          echo "WEBDAV_USERNAME=${{ secrets.WEBDAV_USERNAME }}" >> .env
          echo "WEBDAV_PASSWORD=${{ secrets.WEBDAV_PASSWORD }}" >> .env
          
          echo "ENVIRONMENT=${{ vars.ENVIRONMENT }}" >> .env
          echo "WEBDAV_FOLDER=${{ vars.WEBDAV_FOLDER }}" >> .env
          echo "FILE_PREFIX=${{ vars.FILE_PREFIX }}" >> .env
          echo "BACKUPS_FOLDER=${{ vars.BACKUPS_FOLDER }}" >> .env
          echo "MAXIMUM_STORAGE_DAY=${{ vars.MAXIMUM_STORAGE_DAY }}" >> .env
          echo "PERIOD_SECONDS_RUN=${{ vars.PERIOD_SECONDS_RUN }}" >> .env
          echo "MAX_EXECUTION_TIME=${{ vars.MAX_EXECUTION_TIME }}" >> .env

      - name: "Создадим каталог проекта"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ${{ vars.PROJECT_PATH }}

      - name: "Скопируйте .env в папку проекта."
        run: cp .env ./app

      - name: "Скопируйте файлы приложения на удаленный сервер."
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "./*"
          target: ${{ vars.PROJECT_PATH }}

  deploy:
    name: "Запуск контейнера"
    runs-on: ubuntu-latest
    needs: [ build ]
    environment: production  # использовать среду "production"
    steps:
      - name: "Поднимем docker-compose"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ vars.PROJECT_PATH }}
            make docker-pull                    
            make docker-build                    
            make docker-up                    
            make composer-install       

  alert:
    name: "Уведомление"
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      - name: "Отправить телеграмму по push-уведомлению"
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ vars.TELEGRAM_BOT_TOKEN }}
          message: |
            ${{ github.actor }} создал commit:
            Commit: ${{ github.event.commits[0].message }}

            Репозиторий: ${{ github.repository }}

            Изменения: https://github.com/${{ github.repository }}/commit/${{github.sha}}