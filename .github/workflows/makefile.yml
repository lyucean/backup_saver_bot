name: Deployment

concurrency: production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: "Заполним переменных окружения"
    runs-on: ubuntu-latest
    environment: production  # использовать среду "production"

    steps:
      - name: "Инициализация репозитория"
        uses: actions/checkout@v3

      - name: "Заполнение переменных среды"
        run: |
          echo "WEBDAV_SERVER=${{ secrets.WEBDAV_SERVER }}" >> .env
          echo "WEBDAV_USERNAME=${{ secrets.WEBDAV_USERNAME }}" >> .env
          echo "WEBDAV_PASSWORD=${{ secrets.WEBDAV_PASSWORD }}" >> .env
          echo "SENTRY_DNS=${{ secrets.SENTRY_DNS }}" >> .env
          echo "LOGTAIL_TOKEN=${{ secrets.LOGTAIL_TOKEN }}" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          
          echo "ENVIRONMENT=${{ vars.ENVIRONMENT }}" >> .env
          echo "WEBDAV_FOLDER=${{ vars.WEBDAV_FOLDER }}" >> .env
          echo "BACKUPS_FOLDER=${{ vars.BACKUPS_FOLDER }}" >> .env
          echo "MAXIMUM_STORAGE_DAY=${{ vars.MAXIMUM_STORAGE_DAY }}" >> .env
          echo "PERIOD_START_RUNNER=${{ vars.PERIOD_START_RUNNER }}" >> .env
          echo "PERIOD_START_MAIN=${{ vars.PERIOD_START_MAIN }}" >> .env
          echo "FILE_MASK=${{ vars.FILE_MASK }}" >> .env
          echo "TELEGRAM_CHAT_ID=${{ vars.TELEGRAM_CHAT_ID }}" >> .env

      - name: "Создадим каталог проекта"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ${{ vars.PROJECT_PATH }}

      - name: "Скопируйте .env в папку проекта."
        run: cp .env ./app

      - name: "Скопируйте файлы приложения на удаленный сервер."
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "./*"
          target: ${{ vars.PROJECT_PATH }}

  deploy:
    name: "Запуск контейнера"
    runs-on: ubuntu-latest
    needs: [ build ]
    environment: production  # использовать среду "production"
    steps:
      - name: "Поднимем docker-compose"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ vars.PROJECT_PATH }}
            make init   

  log:
    name: "Уведомление"
    runs-on: ubuntu-latest
    needs: [ deploy ]
    environment: production  # использовать среду "production"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: "Сообщение о новом релизе логи в Better Stack"
        run: |
          curl -X POST \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ secrets.LOGTAIL_TOKEN }}' \
          -d "{\"dt\":\"$(date -u +'%Y-%m-%d %T UTC')\",\"message\":\"-------------- Новый релиз ---------------\"}" \
          -k \
          https://in.logs.betterstack.com

  alert:
    name: "Уведомление"
    runs-on: ubuntu-latest
    needs: [ deploy ]
    environment: production  # использовать среду "production"
    steps:
      - name: "Отправить телеграмму по push-уведомлению"
        uses: appleboy/telegram-action@master
        with:
          to: ${{ vars.TELEGRAM_ALERT_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_ALERT_TOKEN }}
          message: |
            ${{ github.actor }} создал commit:
            Commit: ${{ github.event.commits[0].message }}

            Репозиторий: ${{ github.repository }}

            Изменения: https://github.com/${{ github.repository }}/commit/${{github.sha}}